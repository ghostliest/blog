import { TSort } from '../dto/getStatisticsQuery.dto';

/* eslint-disable max-len */
export const authorsTopQuery = (sort: TSort) =>
  [
    `with VIEWS as (`,
    `select VIEWS."authorId", SUM("views") as views, count(VIEWS."postId") as "posts"`,
    `from (`,
    `select U."id" as "authorId", P."id" as "postId", P."views", P."status", P."createAt"`,
    `from posts P`,
    `join users U on U."id" = P."userId"`,
    `where`,
    `P."status" = 'ACTIVE' and`,
    `P."createAt" >= current_date - interval '1 ${sort}' and`,
    `P."createAt" < current_date + interval '1 day'`,
    `group by P."views", U."id", P."id"`,
    `) as VIEWS`,
    `group by VIEWS."authorId"`,
    `),`,

    `LIKES as (`,
    `select LIKES."authorId", count(*) as likes`,
    `from (`,
    `select U."id" as "authorId", P."id" as "postId", P."status", P."createAt"`,
    `from posts P`,
    `join liked_posts_users L on L."postId" = P."id"`,
    `join users U on U."id" = P."userId"`,
    `where`,
    `P."status" = 'ACTIVE' and`,
    `L."createAt" >= current_date - interval '1 ${sort}' and`,
    `L."createAt" < current_date + interval '1 day'`,
    `) as LIKES`,
    `group by LIKES."authorId"`,
    `),`,

    `FAVORITES as (`,
    `select FAVORITES."authorId", count(*) as favorites`,
    `from (`,
    `select U."id" as "authorId", P."id" as "postId", P."status", P."createAt"`,
    `from posts P`,
    `join favorites_posts_users F on F."postId" = P."id"`,
    `join users U on U."id" = P."userId"`,
    `where`,
    `P."status" = 'ACTIVE' and`,
    `F."createAt" >= current_date - interval '1 ${sort}' and`,
    `F."createAt" < current_date + interval '1 day'`,
    `) as FAVORITES`,
    `group by FAVORITES."authorId"`,
    `),`,

    `FOLLOWERS as (`,
    `select FOLLOWERS."authorId", count(*) as followers`,
    `from (`,
    `select P."userId" as "authorId", F."followerId"`,
    `from posts P`,
    `join followers F on F."followedId" = P."userId"`,
    `where`,
    `F."createAt" >= current_date - interval '1 ${sort}' and`,
    `F."createAt" < current_date + interval '1 day'`,
    `group by P."userId", F."followerId"`,
    `) as FOLLOWERS`,
    `group by FOLLOWERS."authorId"`,
    `)`,

    `select`,
    `json_build_object(`,
    `'id', U."id",`,
    `'firstname', U."firstname",`,
    `'lastname', U."lastname"`,
    `) AS user,`,
    `CAST (V."views" AS INTEGER),`,
    `CAST (V."posts" AS INTEGER),`,
    `CAST (COALESCE(L."likes",0) AS INTEGER) as "likes",`,
    `CAST (COALESCE(FA."favorites",0) AS INTEGER) as "favorites",`,
    `CAST (COALESCE(FO."followers",0) AS INTEGER) as "followers"`,
    `from VIEWS V`,
    `left join LIKES L on L."authorId" = V."authorId"`,
    `left join FAVORITES FA on FA."authorId" = V."authorId"`,
    `left join FOLLOWERS FO on FO."authorId" = V."authorId"`,
    `left join users U on U."id" = V."authorId"`,
    `group by V."authorId", V."views", V."posts", L."likes", FO."followers", FA."favorites", U."id"`,
    `LIMIT 5`,
  ].join(' ');
